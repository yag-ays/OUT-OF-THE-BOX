<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Out-of-the-box</title>
    <link>https://yag-ays.github.io/</link>
    <description>Recent content on Out-of-the-box</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Thu, 26 Jul 2018 04:28:29 +0900</lastBuildDate>
    
	<atom:link href="https://yag-ays.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Home</title>
      <link>https://yag-ays.github.io/home/</link>
      <pubDate>Thu, 26 Jul 2018 04:28:29 +0900</pubDate>
      
      <guid>https://yag-ays.github.io/home/</guid>
      <description>yag_aysの資材置き場。out-of-the-boxなデータセット/コーパスを公開していきたい。</description>
    </item>
    
    <item>
      <title>文字の図形的な埋め込み表現 Glyph-aware Character Embedding</title>
      <link>https://yag-ays.github.io/project/char-embedding/</link>
      <pubDate>Wed, 25 Jul 2018 12:30:41 +0900</pubDate>
      
      <guid>https://yag-ays.github.io/project/char-embedding/</guid>
      <description>「文字の図形的な埋め込み表現」は、文字の図形的な情報から埋め込み表現を学習したデータセットです。文字の意味や文章中の文脈などのセマンティクスから構成する分散表現とは違い、文字の形状という視覚的な特徴を学習しています。それぞれの文字に対する埋め込み表現の近さを計算することで、似た形の文字を推定することができます。
ダウンロード 下記のGitHubレポジトリからダウンロード可能です。以下のURLを開いて「Download」をクリックしてください。
convolutional_AE_300.tar.bz2 (解凍前:88MB, 解凍後:180MB)
以下の2つのファイルが入っています。フォーマットが異なるだけで、どちらも同じベクトルデータです。
 convolutional_AE_300.bin convolutional_AE_300.txt  その他サンプルコードなどのすべてのファイルは、以下のレポジトリにあります。
yagays/glyph-aware-character-embedding
詳細  ベクトル次元：300 文字の種類数：44,637 学習データに用いたフォント：Google Noto Fonts NotoSansCJKjp-Regular  利用方法 gensimを用いた利用方法を例示します。なお、ここではword2vecのように単語の分散表現として扱っていますが、本リソースで扱う文字の図形的な埋め込み表現には加法性がありません。図形としての文字の類似度は計算できますが、部首の足し算引き算といったような操作はできないのでご注意下さい。
from gensim.models import KeyedVectors model = KeyedVectors.load_word2vec_format(&amp;quot;data/convolutional_AE_300.bin&amp;quot;, binary=True)  most_similar()を用いて、図形的な類似文字を検索します。以下の例では一番類似度が高い文字に「а」が来ていますが、これはasciiの「a」ではなくキリル文字の「a」です。
In []: model.most_similar(&amp;quot;a&amp;quot;) Out[]: [(&#39;а&#39;, 1.0000001192092896), (&#39;ả&#39;, 0.961397111415863), (&#39;ä&#39;, 0.9610118269920349), (&#39;ā&#39;, 0.9582812190055847), (&#39;á&#39;, 0.957198441028595), (&#39;à&#39;, 0.9558833241462708), (&#39;å&#39;, 0.938391923904419), (&#39;ầ&#39;, 0.9370290040969849), (&#39;ǎ&#39;, 0.9368112087249756), (&#39;ấ&#39;, 0.9365179538726807)]  Google Noto Fonts NotoSansCJKjp-Regularに含まれるすべての文字に対して操作が可能です。
In []: model.most_similar(&amp;quot;油&amp;quot;) Out[]: [(&#39;汕&#39;, 0.9025427103042603), (&#39;泊&#39;, 0.</description>
    </item>
    
  </channel>
</rss>